image: docker.vpgame.cn/infra/node-1.0-ci-1.2

stages:
  - test
  - compile
  - upload
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_REGISTRY_PREFIX: docker.vpgame.cn
  APP_NAME: ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}
  GROUP_NAME: hy
  NAMESPACE: default

# Job

# Test stage
#unittest:
#  stage: test
#  script:
#    - ""
#lint:
# stage: test
# script:
#   - ""
#
#compile
compile:
 stage: compile
 image: docker.vpgame.cn/infra/node-1.0-ci-1.2
 script:
   - npm i
   - npm run build
 artifacts:
   when: on_success
   paths:
     - build/
     - .next/
     - node_modules/
     - package.json
   expire_in: 1 hour
 tags:
   - base-runner

#upload oss
upload:
 stage: upload
 dependencies:
   - compile
 image: docker.vpgame.cn/infra/python-1.0-ci-1.0
 script:
   - cd build
   - mkdir label-system-fe
   - cp -r static/* label-system-fe/
   - python /root/script/upload-oss-multi-site.py label-system-fe
 tags:
   - base-runner
 only:
   - tags

# Build stage

.build-op:
  stage: build
  dependencies:
    - compile
  image: docker.vpgame.cn/infra/docker-kubectl-1.0
  services:
    - name: docker:dind
      entrypoint: ["dockerd-entrypoint.sh"]
  script:
    - echo "Image name:" ${DOCKER_IMAGE_NAME}
    - docker build -t ${DOCKER_IMAGE_NAME} .
    - docker push ${DOCKER_IMAGE_NAME}
  tags:
    - base-runner

build-test:
 extends: .build-op
 variables:
   DOCKER_IMAGE_NAME:  ${DOCKER_REGISTRY_PREFIX}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
 only:
   - /^testing/
   - optimization_cicd
   - dev
   - master
build-prod:
 extends: .build-op
 variables:
   DOCKER_IMAGE_NAME:  ${DOCKER_REGISTRY_PREFIX}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}
 only:
   - tags

# Deploy stage
.deploy-op:
  stage: deploy
  image: docker.vpgame.cn/infra/docker-kubectl-1.0
  script:
  - echo "Image name:" ${DOCKER_IMAGE_NAME}
  - echo ${APP_NAME}
  - sed -i "s~__NAMESPACE__~${NAMESPACE}~g" ${DEPLOY_FILE}
  - sed -i "s~__APP_NAME__~${APP_NAME}~g" ${DEPLOY_FILE}
  - sed -i "s~__PROJECT_NAME__~${CI_PROJECT_NAME}~g" ${DEPLOY_FILE}
  - sed -i "s~__SUB_PROJECT_NAME__~${SUB_PROJECT_NAME}~g" ${DEPLOY_FILE}
  - sed -i "s~__PROJECT_NAMESPACE__~${CI_PROJECT_NAMESPACE}~g" ${DEPLOY_FILE}
  - sed -i "s~__GROUP_NAME__~${GROUP_NAME}~g" ${DEPLOY_FILE}
  - sed -i "s~__VERSION__~${VERSION}~g" ${DEPLOY_FILE}
  - sed -i "s~__REPLICAS__~${REPLICAS}~g" ${DEPLOY_FILE}
  - kubectl apply -f ${DEPLOY_FILE}
  - kubectl apply -f ${SERVICE_FILE}
  - kubectl rollout status -f ${DEPLOY_FILE}
  - kubectl get all,ing -l app=${APP_NAME} -n $NAMESPACE

# Deploy test environment
deploy-test:
  variables:
    REPLICAS: 1
    VERSION: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    DEPLOY_FILE: ./deploy/test_deployment.yml
    SERVICE_FILE: ./deploy/test_service.yml
  extends: .deploy-op
  environment:
    name: test
    url: http://example.com
  only:
  - /^testing/
  - master
  - optimization_cicd
  - dev
  tags:
    - test-gcp-runner

# Deploy prod environment
deploy-prod:
  variables:
    REPLICAS: 2
    VERSION: ${CI_COMMIT_TAG}
    DEPLOY_FILE: ./deploy/prod_deployment.yml
    SERVICE_FILE: ./deploy/prod_service.yml
  extends: .deploy-op
  environment:
    name: prod
    url: http://example.com
  only:
  - tags
  tags:
  - pro-deploy

